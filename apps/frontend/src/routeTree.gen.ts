/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TldrawImport } from './routes/tldraw'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as WeeklyWeekIdImport } from './routes/weekly.$weekId'
import { Route as MonthlyMonthIdImport } from './routes/monthly.$monthId'
import { Route as DailyDateImport } from './routes/daily.$date'

// Create/Update Routes

const TldrawRoute = TldrawImport.update({
  id: '/tldraw',
  path: '/tldraw',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WeeklyWeekIdRoute = WeeklyWeekIdImport.update({
  id: '/weekly/$weekId',
  path: '/weekly/$weekId',
  getParentRoute: () => rootRoute,
} as any)

const MonthlyMonthIdRoute = MonthlyMonthIdImport.update({
  id: '/monthly/$monthId',
  path: '/monthly/$monthId',
  getParentRoute: () => rootRoute,
} as any)

const DailyDateRoute = DailyDateImport.update({
  id: '/daily/$date',
  path: '/daily/$date',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/tldraw': {
      id: '/tldraw'
      path: '/tldraw'
      fullPath: '/tldraw'
      preLoaderRoute: typeof TldrawImport
      parentRoute: typeof rootRoute
    }
    '/daily/$date': {
      id: '/daily/$date'
      path: '/daily/$date'
      fullPath: '/daily/$date'
      preLoaderRoute: typeof DailyDateImport
      parentRoute: typeof rootRoute
    }
    '/monthly/$monthId': {
      id: '/monthly/$monthId'
      path: '/monthly/$monthId'
      fullPath: '/monthly/$monthId'
      preLoaderRoute: typeof MonthlyMonthIdImport
      parentRoute: typeof rootRoute
    }
    '/weekly/$weekId': {
      id: '/weekly/$weekId'
      path: '/weekly/$weekId'
      fullPath: '/weekly/$weekId'
      preLoaderRoute: typeof WeeklyWeekIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/tldraw': typeof TldrawRoute
  '/daily/$date': typeof DailyDateRoute
  '/monthly/$monthId': typeof MonthlyMonthIdRoute
  '/weekly/$weekId': typeof WeeklyWeekIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/tldraw': typeof TldrawRoute
  '/daily/$date': typeof DailyDateRoute
  '/monthly/$monthId': typeof MonthlyMonthIdRoute
  '/weekly/$weekId': typeof WeeklyWeekIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/tldraw': typeof TldrawRoute
  '/daily/$date': typeof DailyDateRoute
  '/monthly/$monthId': typeof MonthlyMonthIdRoute
  '/weekly/$weekId': typeof WeeklyWeekIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/tldraw'
    | '/daily/$date'
    | '/monthly/$monthId'
    | '/weekly/$weekId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/tldraw'
    | '/daily/$date'
    | '/monthly/$monthId'
    | '/weekly/$weekId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/tldraw'
    | '/daily/$date'
    | '/monthly/$monthId'
    | '/weekly/$weekId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  TldrawRoute: typeof TldrawRoute
  DailyDateRoute: typeof DailyDateRoute
  MonthlyMonthIdRoute: typeof MonthlyMonthIdRoute
  WeeklyWeekIdRoute: typeof WeeklyWeekIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  TldrawRoute: TldrawRoute,
  DailyDateRoute: DailyDateRoute,
  MonthlyMonthIdRoute: MonthlyMonthIdRoute,
  WeeklyWeekIdRoute: WeeklyWeekIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/tldraw",
        "/daily/$date",
        "/monthly/$monthId",
        "/weekly/$weekId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/tldraw": {
      "filePath": "tldraw.tsx"
    },
    "/daily/$date": {
      "filePath": "daily.$date.tsx"
    },
    "/monthly/$monthId": {
      "filePath": "monthly.$monthId.tsx"
    },
    "/weekly/$weekId": {
      "filePath": "weekly.$weekId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
